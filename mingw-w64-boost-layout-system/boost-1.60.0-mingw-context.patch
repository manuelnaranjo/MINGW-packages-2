From 788820f2c5be89882cc0b58bec815decc23af0d7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tomasz=20W=C5=82ostowski?= <tomasz.wlostowski@cern.ch>
Date: Fri, 29 Jan 2016 00:37:30 +0100
Subject: [PATCH] boost::context segfault fix on x86_64/Windows

---
 libs/context/build/Jamfile.v2                  | 18 ++++++++++--------
 libs/context/src/asm/jump_i386_ms_pe_gas.asm   |  3 +++
 libs/context/src/asm/jump_x86_64_ms_pe_gas.asm |  7 +++++--
 libs/context/src/asm/make_i386_ms_pe_gas.asm   |  3 +++
 libs/context/src/asm/make_x86_64_ms_pe_gas.asm |  9 ++++++---
 libs/thread/build/Jamfile.v2                   |  3 ++-
 6 files changed, 29 insertions(+), 14 deletions(-)

diff --git a/libs/context/build/Jamfile.v2 b/libs/context/build/Jamfile.v2
index 63c6984..cba6dce 100644
--- a/libs/context/build/Jamfile.v2
+++ b/libs/context/build/Jamfile.v2
@@ -45,10 +45,11 @@ project boost/context
 local rule default_binary_format ( )
 {
     local tmp = elf ;
-    if [ os.name ] = "NT" { tmp = pe ; }
-    else if [ os.name ] = "CYGWIN" { tmp = pe ; }
-    else if [ os.name ] = "AIX" { tmp = xcoff ; }
-    else if [ os.name ] = "MACOSX" { tmp = mach-o ; }
+#   if [ os.name ] = "NT" { tmp = pe ; }
+#   else if [ os.name ] = "CYGWIN" { tmp = pe ; }
+#   else if [ os.name ] = "AIX" { tmp = xcoff ; }
+#   else if [ os.name ] = "MACOSX" { tmp = mach-o ; }
+    tmp = pe ;
     return $(tmp) ;
 }
 
@@ -65,10 +66,11 @@ feature.set-default binary-format : [ default_binary_format ] ;
 local rule default_abi ( )
 {
     local tmp = sysv ;
-    if [ os.name ] = "NT" { tmp = ms ; }
-    else if [ os.name ] = "CYGWIN" { tmp = ms ; }
-    else if [ os.platform ] = "ARM" { tmp = aapcs ; }
-    else if [ os.platform ] = "MIPS" { tmp = o32 ; }
+#   if [ os.name ] = "NT" { tmp = ms ; }
+#   else if [ os.name ] = "CYGWIN" { tmp = ms ; }
+#   else if [ os.platform ] = "ARM" { tmp = aapcs ; }
+#   else if [ os.platform ] = "MIPS" { tmp = o32 ; }
+    tmp = ms ;
     return $(tmp) ;
 }
 
diff --git a/libs/context/src/asm/jump_i386_ms_pe_gas.asm b/libs/context/src/asm/jump_i386_ms_pe_gas.asm
index b55b772..f83bc8b 100644
--- a/libs/context/src/asm/jump_i386_ms_pe_gas.asm
+++ b/libs/context/src/asm/jump_i386_ms_pe_gas.asm
@@ -138,3 +138,6 @@ _jump_fcontext:
 
     /* indirect jump to context */
     jmp  *%edx
+
+.section .drectve
+.ascii " -export:\"jump_fcontext\""
diff --git a/libs/context/src/asm/jump_x86_64_ms_pe_gas.asm b/libs/context/src/asm/jump_x86_64_ms_pe_gas.asm
index c4706ef..06f37f7 100644
--- a/libs/context/src/asm/jump_x86_64_ms_pe_gas.asm
+++ b/libs/context/src/asm/jump_x86_64_ms_pe_gas.asm
@@ -176,13 +176,13 @@ jump_fcontext:
 
 2:
     /* set offset of stack */
-    movq  0xa8, %rcx
+    movq  $0xa8, %rcx
 
     /* test for indicator */
     testq  %r10, %r10
     je  3f
 
-    addq  0x8, %rcx
+    addq  $0x8, %rcx
 
 3:
     /* prepare stack for FPU */
@@ -223,3 +223,6 @@ jump_fcontext:
     /* indirect jump to context */
     jmp  *%r10
 .seh_endproc
+
+.section .drectve
+.ascii " -export:\"jump_fcontext\""
diff --git a/libs/context/src/asm/make_i386_ms_pe_gas.asm b/libs/context/src/asm/make_i386_ms_pe_gas.asm
index 881b3c8..f025e46 100644
--- a/libs/context/src/asm/make_i386_ms_pe_gas.asm
+++ b/libs/context/src/asm/make_i386_ms_pe_gas.asm
@@ -122,3 +122,6 @@ finish:
     hlt
 
 .def	__exit;	.scl	2;	.type	32;	.endef  /* standard C library function */
+
+.section .drectve
+.ascii " -export:\"make_fcontext\""
diff --git a/libs/context/src/asm/make_x86_64_ms_pe_gas.asm b/libs/context/src/asm/make_x86_64_ms_pe_gas.asm
index 31dd566..1d139f6 100644
--- a/libs/context/src/asm/make_x86_64_ms_pe_gas.asm
+++ b/libs/context/src/asm/make_x86_64_ms_pe_gas.asm
@@ -94,7 +94,7 @@ make_fcontext:
     movq  %rcx, %rax
 
     /* reserve 32byte shadow-space for context-function */
-    leaq  -0x28(%rax), %rax
+    subq  $0x28, %rax
 
     /* shift address in RAX to lower 16 byte boundary */
     /* == pointer to fcontext_t and address of context stack */
@@ -103,7 +103,7 @@ make_fcontext:
     /* reserve space for context-data on context-stack */
     /* size for fc_mxcsr .. RIP + return-address for context-function */
     /* on context-function entry: (RSP -0x8) % 16 == 0 */
-    leaq  -0x128(%rax), %rax
+    subq  $0x128, %rax
 
     /* third arg of make_fcontext() == address of context-function */
     movq  %r8, 0x118(%rax)
@@ -133,7 +133,7 @@ make_fcontext:
     movq  %rcx, 0x120(%rax)
 
     /* set indicator */
-    movq  1, %rcx
+    mov  $0x1, %rcx
     movq  %rcx, (%rax)
 
     ret /* return pointer to context-data */
@@ -149,3 +149,6 @@ finish:
 .seh_endproc
 
 .def	_exit;	.scl	2;	.type	32;	.endef  /* standard C library function */
+
+.section .drectve
+.ascii " -export:\"make_fcontext\""
diff --git a/libs/thread/build/Jamfile.v2 b/libs/thread/build/Jamfile.v2
index 6a46030..394c04a 100644
--- a/libs/thread/build/Jamfile.v2
+++ b/libs/thread/build/Jamfile.v2
@@ -142,7 +142,8 @@ project boost/thread
 local rule default_threadapi ( )
 {
     local api = pthread ;
-    if [ os.name ] = "NT" { api = win32 ; }
+    #if [ os.name ] = "NT" { api = win32 ; }
+    api = win32 ;
     return $(api) ;
 }
 
-- 
1.9.1

